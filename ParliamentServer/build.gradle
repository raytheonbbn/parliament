plugins {
	id 'org.springframework.boot' version '2.7.0'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

sourceCompatibility = '1.8'
targetCompatibility = '1.8'
defaultTasks 'bootRun'

ext {
	genJavaDir = file("$buildDir/generated/java")
	artifactsDir = file("$rootDir/target/artifacts")
}

dependencies {
	implementation fileTree(dir: artifactsDir, include: ['JenaParliament.jar'])
	implementation fileTree(dir: artifactsDir, include: ['JosekiParliamentClient.jar'])
	implementation fileTree(dir: artifactsDir, include: ['NumericIndex.jar'])
	implementation fileTree(dir: artifactsDir, include: ['Parliament.jar'])
	implementation fileTree(dir: artifactsDir, include: ['SpatialIndexProcessor.jar'])
	implementation fileTree(dir: artifactsDir, include: ['TemporalIndexProcessor.jar'])

	implementation "$commonsFileUpload"
	implementation "$commonsLangDependency"

	implementation("$jenaArqDependency") {
		exclude group: 'commons-logging', module: 'commons-logging'
	}
	implementation "$slf4jApiDependency"
	//implementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.13.3'
	implementation "$jclOverSlf4j"

	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

// By default, Spring wants to use logback, which then gets upset because
// SLF4J is present.  This allows SLF4J to take over:
configurations {
	all*.exclude module : 'spring-boot-starter-logging'
//	all {
//		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
//	}
}

sourceSets {
	main {
		java { srcDir genJavaDir }
	}
}

// See https://jena.apache.org/documentation/tools/schemagen.html
task runSchemagen(type: JavaExec) {
	classpath = sourceSets.main.compileClasspath
	mainClass = 'jena.schemagen'
	args = [
		'-i', "${projectDir}/src/main/resources/config-ont.ttl",
		'-o', "${genJavaDir}",
		'--owl',
		'-n', 'ConfigOnt',
		'--package', 'com.bbn.parliament.jena.bridge.configuration.vocab'
	]
}

compileJava.dependsOn runSchemagen

test {
	useJUnitPlatform()
	systemProperties = [
		'java.library.path' : "${rootDir}/target/Parliament-v2.7.14-clang/bin",
		'log4j.configuration' : "file:///${rootDir}/log4j.junit.properties",
	]
	environment = [
		'LD_LIBRARY_PATH' : "${rootDir}/target/Parliament-v2.7.14-gcc/bin",
		'Path' : "${rootDir}/target/Parliament-v2.7.14-msvc/bin;${System.getenv('Path')}",
		'PARLIAMENT_KB_CONFIG_PATH' : "${rootDir}/target/test-bin/ParliamentKbConfig.txt",
		'PARLIAMENT_LOG_CONFIG_PATH' : "${rootDir}/target/test-bin/ParliamentLogConfig.txt",
	]
}

task copyTestResources(type: Copy) {
	from '${projectDir}/src/test/resources'
	into '${buildDir}/classes/java/test'
}

bootRun {
	systemProperty 'java.library.path', "${rootDir}/target/Parliament-v2.7.14-clang/bin"
	environment = [
		'LD_LIBRARY_PATH' : "${rootDir}/target/Parliament-v2.7.14-gcc/bin",
		'Path' : "${rootDir}/target/Parliament-v2.7.14-msvc/bin;${System.getenv('Path')}",
		'PARLIAMENT_KB_CONFIG_PATH' : "${rootDir}/Parliament/KbCore/ParliamentKbConfig.txt",
		'PARLIAMENT_LOG_CONFIG_PATH' : "${rootDir}/Parliament/KbCore/ParliamentLogConfig.txt",
	]
}

subprojects {
	junitPlatformTest.dependsOn copyTestResources
}
